"use strict";(()=>{var e={};e.id=1946,e.ids=[1946],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},50216:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>y,patchFetch:()=>w,requestAsyncStorage:()=>k,routeModule:()=>h,serverHooks:()=>_,staticGenerationAsyncStorage:()=>I});var o={};r.r(o),r.d(o,{GET:()=>f,POST:()=>g,dynamic:()=>d});var a=r(49303),n=r(88716),i=r(60670),s=r(87070),u=r(20728),l=r(95456),c=r(91585),p=r(26033);let d="force-dynamic",m=c.Ry({departureId:c.Z_(),returnDepartureId:c.Z_().optional(),pickupLocationId:c.Z_(),dropoffLocationId:c.Z_().optional(),passengerCount:c.Rx().min(1).max(15),customerType:c.Km(["REGULAR","STUDENT","MILITARY","LEGACY"]).optional().default("REGULAR"),guestInfo:c.Ry({firstName:c.Z_().min(1),lastName:c.Z_().min(1),email:c.Z_().email(),phone:c.Z_().min(10),createAccount:c.O7().optional().default(!1)}).optional(),passengers:c.IX(c.Ry({firstName:c.Z_().min(1),lastName:c.Z_().min(1),age:c.Rx().optional(),dateOfBirth:c.Z_().optional()})).min(1),extraLuggage:c.Rx().min(0).max(10).optional().default(0),pets:c.Rx().min(0).max(5).optional().default(0),specialRequests:c.Z_().optional(),paymentMethodId:c.Z_().optional()});async function g(e){try{let t;console.log("Booking API: Starting request processing");let r=await e.json();console.log("Booking API: Request body:",JSON.stringify(r,null,2));let o=m.parse(r);console.log("Booking API: Validation successful"),console.log("Booking API: Getting current user");let a=await (0,l.ts)();if(console.log("Booking API: Current user:",a?"authenticated":"guest"),!a&&!o.guestInfo)return s.NextResponse.json({error:"Guest information is required for unauthenticated bookings"},{status:400});console.log("Booking API: Checking departure availability for ID:",o.departureId);let n=null,i=15;if(o.departureId.startsWith("mock_dep_"))console.log("Booking API: Using mock departure for testing"),n={id:o.departureId,capacity:15,schedule:{routeId:"mock_route_id",route:{name:"Columbia to Charlotte Airport"}},_count:{bookings:0}},i=15;else try{if(!(n=await u._.departure.findUnique({where:{id:o.departureId},include:{schedule:{include:{route:!0}},_count:{select:{bookings:!0}}}})))return s.NextResponse.json({error:"Departure not found"},{status:404});i=n.capacity-n._count.bookings}catch(e){console.error("Database error, using mock departure:",e),n={id:o.departureId,capacity:15,schedule:{routeId:"mock_route_id",route:{name:"Columbia to Charlotte Airport"}},_count:{bookings:0}},i=15}if(i<o.passengerCount)return s.NextResponse.json({error:"Not enough seats available",availableSeats:i},{status:400});let c={LEGACY:31,STUDENT:32,MILITARY:32,REGULAR:35}[o.customerType]*o.passengerCount,p=5*(o.extraLuggage||0),d=10*(o.pets||0),g=c+p+d,f=!!o.returnDepartureId,h=f?Math.round(.1*g):0,k=f?2*g-h:g,I=await u._.pricingTier.findFirst({where:{isActive:!0,customerType:o.customerType}}),_=null;if(!I&&!(_=await u._.pricingTier.findFirst({where:{isActive:!0}})))return s.NextResponse.json({error:"No pricing available"},{status:500});let y=a?.id||null,w=!a;if(w&&o.guestInfo?.createAccount){let e=await u._.user.findUnique({where:{email:o.guestInfo.email.toLowerCase()}});y=e?e.id:(await u._.user.create({data:{email:o.guestInfo.email.toLowerCase(),firstName:o.guestInfo.firstName,lastName:o.guestInfo.lastName,phone:o.guestInfo.phone,customerType:o.customerType,emailVerified:new Date}})).id,w=!1}if(o.departureId.startsWith("mock_dep_"))console.log("Booking API: Creating mock booking for testing"),t={id:`mock_booking_${Date.now()}`,bookingNumber:`SK${Date.now().toString().slice(-6)}`,totalAmount:k,isGuestBooking:w,departure:{date:new Date,schedule:{time:"14:00",route:{name:"Columbia to Charlotte Airport"}}},returnDeparture:null,pickupLocation:{name:"Downtown Columbia - Hotel Trundle"},dropoffLocation:{name:"Charlotte Douglas International Airport"},passengers:o.passengers,paymentRequired:k,accountCreated:!1};else try{t=await u._.booking.create({data:{userId:y,routeId:n.schedule.routeId||"default_route_id",departureId:o.departureId,returnDepartureId:o.returnDepartureId,pickupLocationId:o.pickupLocationId,dropoffLocationId:o.dropoffLocationId||o.pickupLocationId,pricingTierId:(I||_).id,passengerCount:o.passengerCount,totalAmount:k,extraLuggageBags:o.extraLuggage||0,extraLuggageFee:p,petCount:o.pets||0,petFee:d,status:"PENDING",isRoundTrip:f,isGuestBooking:w,guestEmail:w?o.guestInfo?.email:null,guestPhone:w?o.guestInfo?.phone:null,guestFirstName:w?o.guestInfo?.firstName:null,guestLastName:w?o.guestInfo?.lastName:null,specialRequests:o.specialRequests,passengers:{create:o.passengers.map(e=>({firstName:e.firstName,lastName:e.lastName,age:e.age,email:e.age&&e.age>=18?w?o.guestInfo?.email:a?.email:null,seatNumber:null,checkedIn:!1}))}},include:{departure:{include:{schedule:{include:{route:!0}}}},returnDeparture:{include:{schedule:{include:{route:!0}}}},pickupLocation:!0,dropoffLocation:!0,passengers:!0,user:!0}})}catch(e){console.error("Database error during booking creation, using mock booking:",e),t={id:`mock_booking_${Date.now()}`,bookingNumber:`SK${Date.now().toString().slice(-6)}`,totalAmount:k,isGuestBooking:w,departure:{date:new Date,schedule:{time:"14:00",route:{name:"Columbia to Charlotte Airport"}}},returnDeparture:null,pickupLocation:{name:"Downtown Columbia - Hotel Trundle"},dropoffLocation:{name:"Charlotte Douglas International Airport"},passengers:o.passengers,paymentRequired:k,accountCreated:!1}}return s.NextResponse.json({success:!0,booking:{id:t.id,bookingNumber:t.bookingNumber,totalAmount:t.totalAmount,isGuestBooking:t.isGuestBooking,departure:{date:t.departure.date,time:t.departure.schedule.time,route:t.departure.schedule.route.name},returnDeparture:t.returnDeparture?{date:t.returnDeparture.date,time:t.returnDeparture.schedule.time,route:t.returnDeparture.schedule.route.name}:null,pickupLocation:t.pickupLocation.name,dropoffLocation:t.dropoffLocation.name,passengers:t.passengers,paymentRequired:t.totalAmount,accountCreated:!w&&o.guestInfo?.createAccount}})}catch(e){if(console.error("Booking creation error:",e),console.error("Error details:",{message:e instanceof Error?e.message:"Unknown error",stack:e instanceof Error?e.stack:void 0,name:e instanceof Error?e.name:void 0}),e instanceof p.jm)return s.NextResponse.json({error:"Validation error",details:e.errors},{status:400});return s.NextResponse.json({error:"Internal server error",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function f(e){try{let{searchParams:t}=new URL(e.url),r=t.get("confirmationCode"),o=t.get("email");if(!r||!o)return s.NextResponse.json({error:"Confirmation code and email required"},{status:400});let a=await u._.booking.findFirst({where:{bookingNumber:r,user:{email:o}},include:{departure:{include:{schedule:{include:{route:!0}}}},returnDeparture:{include:{schedule:{include:{route:!0}}}},pickupLocation:!0,dropoffLocation:!0,user:!0,passengers:!0,payment:!0}});if(!a)return s.NextResponse.json({error:"Booking not found"},{status:404});return s.NextResponse.json({booking:a})}catch(e){return console.error("Booking lookup error:",e),s.NextResponse.json({error:"Internal server error"},{status:500})}}let h=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/bookings/route",pathname:"/api/bookings",filename:"route",bundlePath:"app/api/bookings/route"},resolvedPagePath:"C:\\Users\\priej\\skoot-transportation\\src\\app\\api\\bookings\\route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:k,staticGenerationAsyncStorage:I,serverHooks:_}=h,y="/api/bookings/route";function w(){return(0,i.patchFetch)({serverHooks:_,staticGenerationAsyncStorage:I})}},95456:(e,t,r)=>{r.d(t,{Lz:()=>c,QO:()=>d,c_:()=>m,ts:()=>p});var o=r(45609),a=r(20728),n=r(53797),i=r(77234),s=r(13539),u=r(42023),l=r.n(u);let c={adapter:(0,s.N)(a._),secret:"your-secret-key-here-make-it-long-and-random",providers:[(0,i.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,authorization:{params:{prompt:"consent",access_type:"offline",response_type:"code",scope:"openid email profile"}}}),{id:"amazon",name:"Amazon",type:"oauth",authorization:{url:"https://www.amazon.com/ap/oa",params:{scope:"profile",response_type:"code"}},token:"https://api.amazon.com/auth/o2/token",userinfo:"https://api.amazon.com/user/profile",clientId:process.env.AMAZON_CLIENT_ID,clientSecret:process.env.AMAZON_CLIENT_SECRET,profile:e=>({id:e.user_id,name:e.name,email:e.email,image:null})},(0,n.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;try{let t=await a._.user.findUnique({where:{email:e.email.toLowerCase()}});if(!t)return null;return{id:t.id,email:t.email,name:`${t.firstName} ${t.lastName}`,image:t.image,isAdmin:t.isAdmin}}catch(e){return console.error("Authentication error:",e),null}}})],session:{strategy:"jwt",maxAge:2592e3,updateAge:86400},jwt:{maxAge:2592e3},callbacks:{async signIn({user:e,account:t,profile:r}){if(t?.provider==="google"||t?.provider==="amazon")try{let t=await a._.user.findUnique({where:{email:e.email}});if(t)!t.image&&e.image&&await a._.user.update({where:{id:t.id},data:{image:e.image}});else{let r=e.name?.split(" ")||["",""];t=await a._.user.create({data:{email:e.email,firstName:r[0]||"Guest",lastName:r.slice(1).join(" ")||"User",image:e.image,emailVerified:new Date,customerType:"REGULAR"}})}}catch(e){return console.error(`Error during ${t.provider} sign in:`,e),!1}return!0},async jwt({token:e,user:t,account:r}){if(t){let r=await a._.user.findUnique({where:{email:t.email}});r&&(e.isAdmin=r.isAdmin,e.userId=r.id,e.firstName=r.firstName,e.lastName=r.lastName)}return e},session:async({session:e,token:t})=>(t&&(e.user.id=t.userId,e.user.isAdmin=t.isAdmin,e.user.name=`${t.firstName} ${t.lastName}`),e)},pages:{signIn:"/auth/signin",error:"/auth/error"},cookies:{sessionToken:{name:"__Secure-next-auth.session-token",options:{httpOnly:!0,sameSite:"lax",path:"/",secure:!0}},callbackUrl:{name:"__Secure-next-auth.callback-url",options:{httpOnly:!0,sameSite:"lax",path:"/",secure:!0}},csrfToken:{name:"__Host-next-auth.csrf-token",options:{httpOnly:!0,sameSite:"lax",path:"/",secure:!0}}},useSecureCookies:!0,debug:!1};async function p(){try{let e=await (0,o.getServerSession)(c);if(!e?.user?.email)return null;let t=await a._.user.findUnique({where:{email:e.user.email},select:{id:!0,email:!0,firstName:!0,lastName:!0,isAdmin:!0}});if(!t)return null;return{id:t.id,email:t.email,name:`${t.firstName} ${t.lastName}`,isAdmin:t.isAdmin}}catch(e){return console.error("Error getting current user:",e),null}}async function d(e,t,r){try{let o=await p();if(!o)return new Response(JSON.stringify({error:"Authentication required"}),{status:401,headers:{"Content-Type":"application/json"}});if(r&&!o.isAdmin)return new Response(JSON.stringify({error:"Admin access required"}),{status:403,headers:{"Content-Type":"application/json"}});return await t(e,o)}catch(e){return console.error("Auth middleware error:",e),new Response(JSON.stringify({error:"Authentication failed"}),{status:500,headers:{"Content-Type":"application/json"}})}}async function m(e){return await l().hash(e,12)}},20728:(e,t,r)=>{r.d(t,{_:()=>a});let o=require("@prisma/client"),a=globalThis.prisma??new o.PrismaClient}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),o=t.X(0,[8948,5972,3678,1585],()=>r(50216));module.exports=o})();